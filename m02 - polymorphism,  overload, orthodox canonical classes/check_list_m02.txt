Помните, что качество защиты, а значит, и качество школы на рынке труда зависит от вас. Удаленная защита во время кризиса Covid обеспечивает большую гибкость, чтобы вы могли продвигаться по своей учебной программе, но также несет больше рисков обмана, несправедливости, лени, которые повредят развитию навыков каждого. Мы действительно рассчитываем на вашу зрелость и мудрость во время этой удаленной защиты на благо всего сообщества.

МАСШТАБ ДЛЯ ПРОЕКТА CPP MODULE 02 (/ PROJECTS / CPP-MODULE-02)
Вы должны оценить 1 студента в этой команде

МАСШТАБ ДЛЯ ПРОЕКТА CPP MODULE 02 (/ PROJECTS / CPP-MODULE-02)
Вы должны оценить 1 студента в этой команде

Вступление
- Оценивайте только те работы, которые находятся в репозитории GiT учащегося или группы.

Помните, что качество защиты, а значит, и качество школы на рынке труда зависит от вас. Удаленная защита во время кризиса Covid обеспечивает большую гибкость, чтобы вы могли продвигаться по своей учебной программе, но также несет больше рисков обмана, несправедливости, лени, которые повредят развитию навыков каждого. Мы действительно рассчитываем на вашу зрелость и мудрость во время этой удаленной защиты на благо всего сообщества.

- Еще раз проверьте, что репозиторий GiT принадлежит студенту или группе. Убедитесь, что работа предназначена для соответствующего проекта, а также убедитесь, что «git clone» используется в пустой папке.

- Тщательно проверьте, не использовались ли злонамеренные псевдонимы, чтобы обмануть вас и заставить оценить что-то, кроме содержания официального репозитория.

- Чтобы избежать сюрпризов, внимательно проверьте, ознакомились ли и оценивающие, и оцениваемые учащиеся с возможными сценариями, используемыми для облегчения выставления оценок.

- Если оценивающий студент еще не завершил этот конкретный проект, он обязательно должен прочитать весь предмет до начала защиты.

- Используйте флаги, доступные на этой шкале, чтобы сигнализировать о пустом репозитории, неработающей программе, ошибке нормы, мошенничестве и т. Д. В этих случаях оценка завершена, и итоговая оценка равна 0 (или -42 в случае мошенничества). Однако, за исключением обмана, вам рекомендуется продолжить обсуждение своей работы (даже если вы еще не закончили ее), чтобы выявить любые проблемы, которые могли вызвать этот сбой, и избежать повторения той же ошибки в будущем.



_____________
- Использование словосочетаний «using namespace» или «friend»
- Использование внешней библиотеки или функций C ++ 20
- Использование уже существующего контейнера или любой существующей функции для реализации другого контейнера.


Вложения
  subject.pdf (https://cdn.intra.42.fr/pdf/pdf/26312/en.subject.pdf)

Упражнение 00: Моя первая каноника

Это упражнение знакомит с понятием канонического класса с помощью простого арифметического примера: чисел с фиксированной точкой.

Макейфле

Существует Makeifle, который компилируется с использованием соответствующих флагов.
Да Нет

Аксессоры

Класс Fixed (или любое другое его имя) должен предоставлять методы доступа к необработанному значению:
- int getRawBits (void) const;
- void setRawBits (int const raw);
Эти функции-члены присутствуют и функционируют?
Да Нет

Канонический

Канонический класс должен обеспечивать как минимум:
- Конструктор по умолчанию
- деструктор
- Конструктор копирования
- Оператор присваивания
Эти элементы присутствуют и функционируют?
Да Нет

Упражнение 01: На пути к более полезному классу фиксированных точек

    Ex00 был хорошим началом, но наш класс по-прежнему бесполезен, поскольку может представлять только фиксированную точку 0,0.

Макейфле
Существует Makeifle, который компилируется с использованием соответствующих флагов.
Да Нет

Конструктор с плавающей запятой
Можно ли построить экземпляр из значения плавающей точки?
Да Нет

<< оператор
Есть ли перегрузка оператора << и работает ли он?
Да Нет

Значение фиксированной точки в целочисленное значение

Функция-член "int toInt (void) const;" который преобразует фиксированное значение точки в целочисленное значение, должен присутствовать. Это функционально?
Да Нет

Значение фиксированной точки для изменения значения точки

Должна присутствовать функция-член \ "lfoat toFloat (void) const; \", которая преобразует значение точки ifxed в значение lfoat. Это функционально?
Да Нет

Целочисленный конструктор
Можно ли построить экземпляр из целочисленного значения?
Да Нет

Упражнение 02: теперь мы говорим

  Это упражнение добавляет классу возможности сравнения и арифметики.

Макейфле
Существует Makeifle, который компилируется с использованием соответствующих флагов.

Да Нет
Разделение
Класс должен предоставлять оператор деления. Он присутствует и работает?
Да Нет

Упражнение 03: BSP

Макейфле
Существует Makeifle, который компилируется с использованием соответствующих lfags.
Да Нет

Clacc Point
Есть класс Point, который имеет два атрибута (x и y) типа Fixed const. У него также есть конструктор, который принимает два lfoat и инициализирует x и y этими значениями.
Да Нет

Функция bsp
Есть функция bsp, прототипом которой является
"bool bsp (Point const a, Point const b, Point const c, Point const point)". Функция возвращает True, если точка находится внутри треугольника, описываемого вершинами a, b и c. В противном случае возвращается False.
Да Нет

Основное и тестовое
Существует основная проверка того, что функция bsp работает, как описано выше. Выполните несколько тестов, чтобы убедиться, что возвращаемое значение верное.
Да Нет